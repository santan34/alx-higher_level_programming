==========================
TEST OF MATRIX DIVIDED
=========================

::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Normal data
===================
All ints
::

    >>> matrix_divided([[2]], 2)
    [[1.0]]

    >>> matrix_divided([[2], [4]], 2)
    [[1.0], [2.0]]

    >>> matrix_divided([[2, 4], [4, 2]], 2)
    [[1.0, 2.0], [2.0, 1.0]]

All floats
::
    >>> matrix_divided([[1.6]], 2)
    [[0.8]]

Float and Integer
::
    >>> matrix_divided([[5], [1]], 0.5)
    [[10.0], [2.0]]

    >>> matrix_divided([[2.5, 3.02], [2.8, 4.2]], 2)
    [[1.25, 1.51], [1.4, 2.1]]

    >>> matrix_divided([[1, 2.8, 3.62]], 3)
    [[0.33, 0.93, 1.21]]

lists of different lenghts
::
    >>> matrix_divided([[1], [1, 3]], 1)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

division by 0
::
    >>> matrix_divided([[2], [3]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Wrong data type
::
    >>> matrix_divided([["string", 2 , (2, 3)], [2, 4, 8]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided("1, 3 4", 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2]], float("inf"))
    [[0.0]]

    >>> matrix_divided([[float('inf')]], 2)
    [[inf]]

    >>> matrix_divided([[float('NaN')]], 2)
    [[nan]]

    >>> matrix_divided([[2]], float('Nan'))
    [[nan]]


incorrect number of arguments
::
    >>> matrix_divided([[2], [2]], 2, 22)
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Undefined object
::
    >>> matrix_divided(i, 2)
    Traceback (most recent call last):
    NameError: name 'i' is not defined

